{"version":3,"sources":["components/RedirectWithQuery.jsx","components/PrivateRoute.jsx","Routes.jsx","Main.jsx"],"names":["withRouter","target","location","rest","to","pathname","search","hash","PrivateRoute","Target","component","hello","render","props","RedirectWithQuery","AsyncLogin","lazy","AsyncWelcome","AsyncGoodbye","Routes","path","exact","Main","this","pathPrefix","basename","event","preventDefault","window","reload","PureComponent","connect","state","common","updateAvailable"],"mappings":"sLAsBeA,iBAjBW,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,SAAaC,EAAU,iBACnDC,EAAK,CACTC,SAAUJ,EACVK,OAAQJ,EAASI,OACjBC,KAAML,EAASK,MAGjB,OACE,cAAC,IAAD,aAAUH,GAAIA,GAAQD,Q,oKCQXK,EAfM,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAmBC,EAAtB,EAAsBA,MAAUR,EAAhC,wBACnB,cAAC,IAAD,2BAAWA,GAAX,IAAiBS,OAAQ,SAAAC,GAAK,OAC5BF,EACE,cAACF,EAAD,eAAYI,IAEZ,cAACC,EAAA,EAAD,CAAmBb,OAAO,qBCJ1Bc,EAAaC,gBAAK,kBACtB,+DACIC,EAAeD,gBAAK,kBACxB,uDACIE,EAAeF,gBAAK,kBACxB,uDA0BaG,EAxBA,SAAC,GAAD,IAAGR,EAAH,EAAGA,MAAH,OACb,eAAC,IAAD,WACE,cAAC,EAAD,CACES,KAAK,WACLC,OAAK,EACLX,UAAWO,EACXN,MAAOA,IAET,cAAC,IAAD,CACES,KAAK,WACLC,OAAK,EACLX,UAAWQ,IAEb,cAAC,IAAD,CACEE,KAAK,IACLV,UAAWK,QCrBXO,E,4JACJ,WACE,MAA8BC,KAAKV,MAA3BF,EAAR,EAAQA,MAAOa,EAAf,EAAeA,WAEf,OACE,cAAC,IAAD,CAAeC,SAAUD,EAAzB,SACE,cAAC,EAAD,CAAQb,MAAOA,Q,oBAKrB,SAAOe,GACLA,EAAMC,iBAENC,OAAO1B,SAAS2B,a,GAdDC,iBAoCJC,uBAVS,SAACC,GACvB,MAA+CA,EAAMC,OAErD,MAAO,CACLtB,MAHF,EAAQA,MAINuB,gBAJF,EAAeA,gBAKbV,WALF,EAAgCA,cASnBO,CAAyBT","file":"static/js/identifier-main.e7071e05.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport { Redirect } from 'react-router-dom';\n\nconst RedirectWithQuery = ({target, location, ...rest}) => {\n  const to = {\n    pathname: target,\n    search: location.search,\n    hash: location.hash\n  };\n\n  return (\n    <Redirect to={to} {...rest}></Redirect>\n  );\n};\n\nRedirectWithQuery.propTypes = {\n  target: PropTypes.string.isRequired,\n  location: PropTypes.object.isRequired\n};\n\nexport default withRouter(RedirectWithQuery);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\n\nimport RedirectWithQuery from './RedirectWithQuery';\n\nconst PrivateRoute = ({ component: Target, hello, ...rest }) => (\n  <Route {...rest} render={props => (\n    hello ? (\n      <Target {...props}/>\n    ) : (\n      <RedirectWithQuery target='/identifier' />\n    )\n  )}/>\n);\n\nPrivateRoute.propTypes = {\n  component: PropTypes.elementType.isRequired,\n  hello: PropTypes.object\n};\n\nexport default PrivateRoute;\n","import React, { lazy } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Switch } from 'react-router-dom';\n\nimport PrivateRoute from './components/PrivateRoute';\n\nconst AsyncLogin = lazy(() =>\n  import(/* webpackChunkName: \"containers-login\" */ './containers/Login'));\nconst AsyncWelcome = lazy(() =>\n  import(/* webpackChunkName: \"containers-welcome\" */ './containers/Welcome'));\nconst AsyncGoodbye = lazy(() =>\n  import(/* webpackChunkName: \"containers-goodbye\" */ './containers/Goodbye'));\n\nconst Routes = ({ hello }) => (\n  <Switch>\n    <PrivateRoute\n      path=\"/welcome\"\n      exact\n      component={AsyncWelcome}\n      hello={hello}\n    />\n    <Route\n      path=\"/goodbye\"\n      exact\n      component={AsyncGoodbye}\n    />\n    <Route\n      path=\"/\"\n      component={AsyncLogin}\n    />\n  </Switch>\n);\n\nRoutes.propTypes = {\n  hello: PropTypes.object\n};\n\nexport default Routes;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Routes from './Routes';\n\nclass Main extends PureComponent {\n  render() {\n    const { hello, pathPrefix } = this.props;\n\n    return (\n      <BrowserRouter basename={pathPrefix}>\n        <Routes hello={hello}/>\n      </BrowserRouter>\n    );\n  }\n\n  reload(event) {\n    event.preventDefault();\n\n    window.location.reload();\n  }\n}\n\nMain.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  hello: PropTypes.object,\n  updateAvailable: PropTypes.bool.isRequired,\n  pathPrefix: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  const { hello, updateAvailable, pathPrefix } = state.common;\n\n  return {\n    hello,\n    updateAvailable,\n    pathPrefix\n  };\n};\n\nexport default connect(mapStateToProps)(Main);\n"],"sourceRoot":""}